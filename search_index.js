var documenterSearchIndex = {"docs":
[{"location":"example_3/#.3-1","page":"6.3 - ...","title":"6.3","text":"","category":"section"},{"location":"start/#Getting-Started-1","page":"2 - Getting Started","title":"2 - Getting Started","text":"","category":"section"},{"location":"gb_implementation/#.3-GraphBlas-based-implementation-1","page":"5.3 - Graph Blas","title":"5.3 - GraphBlas based implementation","text":"","category":"section"},{"location":"verticesCongruence/#.0-Vertices-Congruence-Algorithm-1","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence Algorithm","text":"","category":"section"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"The Vertices congruence is the base of the Cell Congruence Enabling Algorithm.","category":"page"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"The merging procedure relies on the fact that points closed enought are actually the same point. This highlights the dichotomical relation between geometry and topology within a model: space location (Geometry) is needed in order to retrieve wich point to merge and consequently update the chain complexes (Topology).","category":"page"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"The following interface allows close point recognition.","category":"page"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"LC.vertCongruence","category":"page"},{"location":"verticesCongruence/#LocalCongruence.vertCongruence","page":"5.0 - Vertices Congruence","title":"LocalCongruence.vertCongruence","text":"vertCongruence(V::Lar.Array{Float64,2}; ϵ=1e-6)::Tuple{Lar.Points, Array{Array{Int,1},1}}\n\nEvaluates the Vertex Congruence for 3D-points V  ℳ(3n).\n\nThe function determines the points of V closer than ϵ and builds a new Vertex Set made of the representative of each point cluster.\n\nThe method returns:\n\nthe new Vertex Set\na map that, for every new vertex, identifies the old vertices it is made of\n\n\n\n\n\n","category":"function"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"The value epsilon  0 actually serve as a discriminant for well understending whether different points are actually the same. As a side effect it also sets the resolution employed by the CCE algorithm itself since, even if points within the resolution where different at first glance, they arise to be the same after this procedure.","category":"page"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"Do note that this powerful feature may actually cause loss in the topological structure: low resolution processing decrease in fact further steps computation complexity at the cost of a information loss.","category":"page"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"In order to keep the complex as similar as possible to the input, each points class is identified as the mean point of the set.","category":"page"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"We employ a KDTree structure in order to speedup the point scan; this however means that if points are supplied in different order, a different geometrical pattern may be generated (even a diffent number of points)","category":"page"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"err = 1e-8\nV = [\n    0.0  err  0.0 -err  0.0  0.0\n    0.0  0.0  err  0.0 -err  0.0\n]\n\nvertCongruence(V[:, 1:5])\n\nvertCongruence(V[:, 2:6])","category":"page"},{"location":"verticesCongruence/#","page":"5.0 - Vertices Congruence","title":"5.0 - Vertices Congruence","text":"<!– add picture –>","category":"page"},{"location":"example_1/#.1-1","page":"6.1 - Cube Grids","title":"6.1","text":"","category":"section"},{"location":"aa_implementation/#.1-Array-of-arrays-based-implementation-1","page":"5.1 - Array of Arrays","title":"5.1 - Array of arrays based implementation","text":"","category":"section"},{"location":"sm_implementation/#.2-Native-Sparse-Matrices-implementation-1","page":"5.2 - Native Sparse Matrices","title":"5.2 - Native Sparse Matrices implementation","text":"","category":"section"},{"location":"sm_implementation/#","page":"5.2 - Native Sparse Matrices","title":"5.2 - Native Sparse Matrices","text":"In this section we analyse the Sparse Matrices based implementation of the cellCongruence algorithm.","category":"page"},{"location":"theory/#About-Complexes-and-Chain-Operators-1","page":"3 - Complexes and Chain Operators","title":"3 - About Complexes and Chain Operators","text":"","category":"section"},{"location":"example_2/#.2-1","page":"6.2 - ...","title":"6.2","text":"","category":"section"},{"location":"authors/#A-Authors-1","page":"A - About the Authors","title":"A - Authors","text":"","category":"section"},{"location":"authors/#","page":"A - About the Authors","title":"A - About the Authors","text":"This repository is developed and mantained by the Computational Visual Design Laboratory (CVDLAB) of Università degli Studi di Roma Tre.","category":"page"},{"location":"authors/#[Gianmaria-Del-Monte](https://github.com/gmgigi96)-1","page":"A - About the Authors","title":"Gianmaria Del Monte","text":"","category":"section"},{"location":"authors/#[Elia-Onofri](https://github.com/eOnofri04)-1","page":"A - About the Authors","title":"Elia Onofri","text":"","category":"section"},{"location":"authors/#","page":"A - About the Authors","title":"A - About the Authors","text":"Applied Mathematics in Computer Security represents my main field of interest. In particular I am mostly interested in Cryptography (from a theoretical point of view) and Cryptanalysis (from a computer science point of view).","category":"page"},{"location":"authors/#","page":"A - About the Authors","title":"A - About the Authors","text":"During my education I have also studied many field about Computer Science that vary from the Computability and Complexity Analysis to the most recent logical theories (like lambda-calculus, Linear Logic, . . . ).","category":"page"},{"location":"authors/#","page":"A - About the Authors","title":"A - About the Authors","text":"More recently I have broaden my horizons by confront myself with new perspectives of the Applied Mathematics like Graph Theory, Machine Learning, Computational Topology and Big Data Analysis.","category":"page"},{"location":"authors/#","page":"A - About the Authors","title":"A - About the Authors","text":"Linkedin\nemail","category":"page"},{"location":"authors/#[Giorgio-Scorzelli](https://www.sci.utah.edu/people/scrgiorgio.html)-1","page":"A - About the Authors","title":"Giorgio Scorzelli","text":"","category":"section"},{"location":"authors/#[Alberto-Paoluzzi](http://paoluzzi.dia.uniroma3.it/)-1","page":"A - About the Authors","title":"Alberto Paoluzzi","text":"","category":"section"},{"location":"graph_blas/#Introduction-to-Graph-Blas-Framework-1","page":"4 - Graph Blas Introduction","title":"4 - Introduction to Graph Blas Framework","text":"","category":"section"},{"location":"bibliography/#B-The-Bibliography-1","page":"B - Bibliography","title":"B - The Bibliography","text":"","category":"section"},{"location":"#LocalCongruence.jl-1","page":"1 - Home","title":"1 - LocalCongruence.jl","text":"","category":"section"},{"location":"#","page":"1 - Home","title":"1 - Home","text":"LocalCongruence.jl is a Julia library that provides tools for managing local congruences of Chain Complexes.","category":"page"},{"location":"#","page":"1 - Home","title":"1 - Home","text":"The algorithms here presented are all official variation of those we proposed in Local congruence of chain complexes.","category":"page"},{"location":"#","page":"1 - Home","title":"1 - Home","text":"In particular, given a set of local chain complexes in LinearAlgebraicRepresentation standars, this Julia Module compute a the single corresponding global complex using epsilon-congruence of cells, solving topologically the numerical inaccuracies of floating-point arithmetics.","category":"page"},{"location":"#Dependencies-1","page":"1 - Home","title":"Dependencies","text":"","category":"section"},{"location":"#","page":"1 - Home","title":"1 - Home","text":"LocalCongruence.jl has the following dependeces:","category":"page"},{"location":"#","page":"1 - Home","title":"1 - Home","text":"DataStructures.jl\nGraphBLASInterface.jl\nLinearAlgebraicRepresentation\nusing NearestNeighbors.jl\nSparseArrays.jl\nSparseMM.jl\nSuiteSparseGraphBLAS","category":"page"},{"location":"#","page":"1 - Home","title":"1 - Home","text":"In addition CVD-Lab provides also ViewerGL, an OpenGL 3D interactive viewer adopted in the examples of this module","category":"page"},{"location":"#Docstrings-conventions-1","page":"1 - Home","title":"Docstrings conventions","text":"","category":"section"},{"location":"#","page":"1 - Home","title":"1 - Home","text":"Bold is used to point out theory concepts.\nMonospace is used for everything code related.","category":"page"}]
}
